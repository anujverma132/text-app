{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","type","id","role","tabIndex","class","onClick","togglemode","for","Textform","useState","text","setText","style","color","backgroundColor","rows","cols","value","onChange","event","target","e","preventDefault","temp","toUpperCase","showalert","split","length","Alert","alert","word","lower","toLowerCase","charAt","slice","Capitalise","msg","App","setmode","setalert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f5210a4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n            <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`} >\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"/\">Text Modifier</a>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/\">Link</a>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                        <a className=\"nav-link dropdown-toggle\" href=\"/\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                            Dropdown\r\n                        </a>\r\n                        <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                            <li><a className=\"dropdown-item\" href=\"/\">Action</a></li>\r\n                            <li><a className=\"dropdown-item\" href=\"/\">Another action</a></li>\r\n                            <li><hr className=\"dropdown-divider\"/></li>\r\n                            <li><a className=\"dropdown-item\" href=\"/\">Something else here</a></li>\r\n                        </ul>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                        <a className=\"nav-link disabled\" href=\"/\" tabIndex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success\">Search</button>\r\n                    </form> */}\r\n                    <div class=\"form-check form-switch \">\r\n                    <input class=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" />\r\n                    <label class={`form-check-label text-${props.mode==='light'?'dark':'light'}`} for=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n    );\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n  const textData = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const toUppercase = (e) => {\r\n    e.preventDefault();\r\n    let temp = text.toUpperCase();\r\n    setText(temp);\r\n    props.showalert('Converted to Uppercase','success');\r\n  };\r\n\r\n  const [text, setText] = useState(\"\");\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container \">\r\n        <h1 style={{color : props.mode==='dark'?'white':'#042743'}}>Hello React</h1>\r\n        <p style={{color : props.mode==='dark'?'white':'#042743'}}>This is a Text Util App</p>\r\n          <textarea style={{backgroundColor: props.mode==='dark'?'grey':'white',color : props.mode==='dark'?'white':'black'}} rows=\"8\" cols=\"150\" value={text} onChange={textData} />\r\n          <div>\r\n            <button onClick={toUppercase} className=\"btn btn-primary\">\r\n              Convert To Upper case\r\n            </button>\r\n          </div>\r\n\r\n      </div>\r\n      <div className=\"container my-3\">\r\n        <h1 style={{color : props.mode==='dark'?'white':'#042743'}}>Text Analysis is here!</h1>\r\n        <p style={{color : props.mode==='dark'?'white':'#042743'}}>\r\n          {text.split(\" \").length} word and {text.length} characters.\r\n        </p>\r\n        <h2 style={{color : props.mode==='dark'?'white':'#042743'}}> Preview </h2>\r\n        <p style={{color : props.mode==='dark'?'white':'#042743'}}>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  const Capitalise = (word) =>\r\n  {\r\n      const lower = word.toLowerCase();\r\n      return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  }     \r\n  return (\r\n    props.alert && <div>\r\n      <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{Capitalise(props.alert.type)}</strong> {props.alert.msg}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// import logo from './logo.svg';\nimport React , { useState } from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar'\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\n// import About from './components/About';\n\nfunction App() {\n  const [mode , setmode] = useState('light');\n  const [alert , setalert] = useState(null);\n\n  const showalert = (message , type)=>{\n    setalert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setalert(null);\n    }, 1500);\n  }\n\n  const togglemode = () => {\n    if(mode === 'light'){\n      setmode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showalert('Dark mode has been enabled','success');\n    }\n    else{\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showalert('Light mode has been enabled','success');\n    }\n  }\n\n  return (\n    <>\n      <Navbar mode={mode} togglemode={togglemode}/>\n      <Alert alert={alert}/>\n      <Textform mode={mode} showalert={showalert}/>\n      {/* <About /> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}